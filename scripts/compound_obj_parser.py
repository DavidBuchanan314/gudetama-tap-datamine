# This file is AUTO GENERATED by parser_generator.py - DO NOT EDIT!
from obj_ids import ID
from parser_utils import *


def parse_compound_obj(obj_id, data, parse_obj, parse_primitive_obj):

	if False: # just to get the elif chain started...
		pass

	elif obj_id == ID.ARExpansionGoodsDef:
		obj = {}
		obj["id"], data = unpackex("h", data)
		obj["type"], data = unpackex("h", data)
		obj["price"], data = parse_obj(data)
		return ("ARExpansionGoodsDef", obj), data

	elif obj_id == ID.AbilityParam:
		obj = {}
		obj["type"], data = unpackex("i", data)
		obj["values"], data = parse_obj(data)
		obj["secs"], data = unpackex("i", data)
		return ("AbilityParam", obj), data

	elif obj_id == ID.AssistInfo:
		obj = {}
		obj["aid"], data = unpackex("d", data)
		obj["encodedUid"], data = unpackex("i", data)
		obj["playerName"], data = parseUTF(data)
		obj["playerRank"], data = unpackex("i", data)
		obj["kitchenwareType"], data = unpackex("i", data)
		obj["gudetamaId"], data = unpackex("i", data)
		obj["finishTimeSecs"], data = unpackex("i", data)
		obj["usefulId"], data = unpackex("i", data)
		obj["assistTimeSecs"], data = unpackex("i", data)
		obj["avatar"], data = unpackex("i", data)
		obj["snsProfileImage"], data = parse_obj(data)
		obj["snsType"], data = unpackex("b", data)
		return ("AssistInfo", obj), data

	elif obj_id == ID.AvatarData:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["acquired"], data = unpackex("b", data)
		obj["available"], data = unpackex("b", data)
		return ("AvatarData", obj), data

	elif obj_id == ID.AvatarDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rsrc"], data = unpackex("i", data)
		obj["name"], data = parseUTF(data)
		obj["desc"], data = parseUTF(data)
		obj["conditionDesc"], data = parseUTF(data)
		obj["price"], data = parse_obj(data)
		obj["isNew"], data = unpackex("b", data)
		return ("AvatarDef", obj), data

	elif obj_id == ID.AvatarInfo:
		obj = {}
		obj["updateAvatars"], data = parse_obj(data)
		obj["removeAvatarIds"], data = parse_obj(data)
		return ("AvatarInfo", obj), data

	elif obj_id == ID.CheckedMessageInfo:
		obj = {}
		obj["seq"], data = parse_obj(data)
		obj["type"], data = unpackex("i", data)
		obj["target"], data = unpackex("i", data)
		return ("CheckedMessageInfo", obj), data

	elif obj_id == ID.ComicDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rsrcs"], data = parse_obj(data)
		obj["comicSpine"], data = parse_obj(data)
		return ("ComicDef", obj), data

	elif obj_id == ID.ComicSpineDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["spainMap"], data = parse_primitive_obj(ID(8), data)
		obj["spainAnimeMap"], data = parse_primitive_obj(ID(8), data)
		obj["spainScaleMap"], data = parse_primitive_obj(ID(8), data)
		obj["spainDelayMap"], data = parse_primitive_obj(ID(8), data)
		return ("ComicSpineDef", obj), data

	elif obj_id == ID.CommentDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["name"], data = parseUTF(data)
		return ("CommentDef", obj), data

	elif obj_id == ID.CommonConstants:
		obj = {}
		return ("CommonConstants", obj), data

	elif obj_id == ID.ConvertParam:
		obj = {}
		obj["originalItem"], data = parse_obj(data)
		obj["convertedItem"], data = parse_obj(data)
		obj["convertedParam"], data = parse_obj(data)
		obj["kind"], data = unpackex("i", data)
		obj["id"], data = unpackex("i", data)
		obj["num"], data = unpackex("i", data)
		return ("ConvertParam", obj), data

	elif obj_id == ID.CupGachaData:
		obj = {}
		obj["cookIndex"], data = unpackex("b", data)
		obj["cupGachaIds"], data = parse_obj(data)
		obj["restSec"], data = unpackex("i", data)
		obj["showAdNum"], data = unpackex("b", data)
		return ("CupGachaData", obj), data

	elif obj_id == ID.CupGachaDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rsrc"], data = unpackex("i", data)
		obj["name"], data = parseUTF(data)
		obj["desc"], data = parseUTF(data)
		obj["rarity"], data = unpackex("b", data)
		obj["prizes"], data = parse_obj(data)
		obj["oddses"], data = parse_obj(data)
		obj["cookMin"], data = unpackex("i", data)
		obj["price"], data = parse_obj(data)
		obj["isNew"], data = unpackex("b", data)
		obj["conditionDesc"], data = parseUTF(data)
		obj["sortIndex"], data = unpackex("i", data)
		obj["enableCountryFlags"], data = parse_obj(data)
		obj["missionCommonID"], data = unpackex("i", data)
		return ("CupGachaDef", obj), data

	elif obj_id == ID.CupGachaResult:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["results"], data = parse_primitive_obj(ID(9), data)
		return ("CupGachaResult", obj), data

	elif obj_id == ID.DecorationData:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["acquired"], data = unpackex("b", data)
		obj["available"], data = unpackex("b", data)
		return ("DecorationData", obj), data

	elif obj_id == ID.DecorationDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rsrc"], data = unpackex("i", data)
		obj["name"], data = parseUTF(data)
		obj["desc"], data = parseUTF(data)
		obj["conditionDesc"], data = parseUTF(data)
		obj["price"], data = parse_obj(data)
		obj["isNew"], data = unpackex("b", data)
		return ("DecorationDef", obj), data

	elif obj_id == ID.DecorationInfo:
		obj = {}
		obj["updateDecorations"], data = parse_obj(data)
		obj["removeDecorationIds"], data = parse_obj(data)
		return ("DecorationInfo", obj), data

	elif obj_id == ID.DeliverPointTableDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["gudePointMap"], data = parse_primitive_obj(ID(7), data)
		return ("DeliverPointTableDef", obj), data

	elif obj_id == ID.DelusionDef:
		obj = {}
		obj["param"], data = parse_obj(data)
		return ("DelusionDef", obj), data

	elif obj_id == ID.DelusionParam:
		obj = {}
		obj["pastMinutes"], data = unpackex("i", data)
		return ("DelusionParam", obj), data

	elif obj_id == ID.DictDef:
		obj = {}
		obj["uitext"], data = parse_primitive_obj(ID(8), data)
		obj["message"], data = parse_primitive_obj(ID(8), data)
		obj["textplain"], data = parse_primitive_obj(ID(8), data)
		obj["others"], data = parse_primitive_obj(ID(8), data)
		obj["voice"], data = parse_primitive_obj(ID(8), data)
		obj["guide"], data = parse_primitive_obj(ID(8), data)
		obj["inviteRewardRobos"], data = parse_obj(data)
		obj["guideLocalizeImages"], data = parse_obj(data)
		obj["noticeLocalizeImages"], data = parse_obj(data)
		obj["notice"], data = parse_obj(data)
		obj["hintNum"], data = unpackex("i", data)
		return ("DictDef", obj), data

	elif obj_id == ID.EventData:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["endRestTimeSecs"], data = unpackex("i", data)
		obj["background"], data = parseUTF(data)
		obj["buttonImage"], data = parseUTF(data)
		obj["title"], data = parseUTF(data)
		obj["message"], data = parseUTF(data)
		obj["url"], data = parseUTF(data)
		obj["decorationId"], data = unpackex("i", data)
		obj["endTallyRestTimeSecs"], data = unpackex("i", data)
		obj["rankingId"], data = unpackex("i", data)
		obj["noticeIconRsrc"], data = unpackex("i", data)
		obj["gudetamaIds"], data = parse_obj(data)
		obj["chBGM"], data = parse_obj(data)
		obj["rentalDecorations"], data = parse_obj(data)
		obj["noticeTextKey"], data = parseUTF(data)
		obj["attendable"], data = unpackex("b", data)
		return ("EventData", obj), data

	elif obj_id == ID.EventPreset:
		obj = {}
		return ("EventPreset", obj), data

	elif obj_id == ID.FeatureDef:
		obj = {}
		obj["paramMap"], data = parse_primitive_obj(ID(7), data)
		return ("FeatureDef", obj), data

	elif obj_id == ID.FeatureParam:
		obj = {}
		obj["type"], data = unpackex("i", data)
		obj["value"], data = unpackex("i", data)
		return ("FeatureParam", obj), data

	elif obj_id == ID.FileInfoDef:
		obj = {}
		obj["path"], data = parseUTF(data)
		obj["size"], data = unpackex("i", data)
		obj["hash"], data = unpackex("i", data)
		obj["hasLocale"], data = unpackex("b", data)
		return ("FileInfoDef", obj), data

	elif obj_id == ID.FirstLoginInfo:
		obj = {}
		obj["name"], data = parseUTF(data)
		obj["gender"], data = unpackex("i", data)
		obj["area"], data = unpackex("i", data)
		obj["timeZone"], data = parseUTF(data)
		obj["locale"], data = parseUTF(data)
		obj["deckIndex"], data = unpackex("i", data)
		obj["comment"], data = unpackex("i", data)
		obj["avatar"], data = unpackex("i", data)
		return ("FirstLoginInfo", obj), data

	elif obj_id == ID.FriendAssistResult:
		obj = {}
		obj["userRoomInfo"], data = parse_obj(data)
		obj["lastFriendly"], data = unpackex("i", data)
		obj["addFriendly"], data = unpackex("i", data)
		obj["lastFriendlyLevel"], data = unpackex("i", data)
		return ("FriendAssistResult", obj), data

	elif obj_id == ID.FriendInfo:
		obj = {}
		obj["friendlyData"], data = parse_obj(data)
		obj["wantedGudetamas"], data = parse_obj(data)
		obj["friendPresentLogDiff"], data = parse_obj(data)
		obj["lastFriendlyLevel"], data = unpackex("i", data)
		return ("FriendInfo", obj), data

	elif obj_id == ID.FriendPresentResult:
		obj = {}
		obj["friendlyData"], data = parse_obj(data)
		obj["consumedGudetama"], data = parse_obj(data)
		obj["lastFriendly"], data = unpackex("i", data)
		obj["addFriendly"], data = unpackex("i", data)
		obj["friendPresentLogDiff"], data = parse_obj(data)
		obj["lastFriendlyLevel"], data = unpackex("i", data)
		obj["deliveredEventIds"], data = parse_obj(data)
		return ("FriendPresentResult", obj), data

	elif obj_id == ID.FriendlyData:
		obj = {}
		obj["encodedUid"], data = unpackex("i", data)
		obj["friendly"], data = unpackex("i", data)
		obj["friendlyLevel"], data = unpackex("i", data)
		return ("FriendlyData", obj), data

	elif obj_id == ID.FriendlyDef:
		obj = {}
		obj["params"], data = parse_obj(data)
		obj["heartBorders"], data = parse_obj(data)
		return ("FriendlyDef", obj), data

	elif obj_id == ID.FriendlyParam:
		obj = {}
		obj["index"], data = unpackex("i", data)
		obj["max"], data = unpackex("i", data)
		obj["rewards"], data = parse_obj(data)
		return ("FriendlyParam", obj), data

	elif obj_id == ID.GachaData:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["existsPickup"], data = unpackex("b", data)
		return ("GachaData", obj), data

	elif obj_id == ID.GachaDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rsrc"], data = unpackex("i", data)
		obj["sortIndex"], data = unpackex("i", data)
		obj["name"], data = parseUTF(data)
		obj["desc"], data = parseUTF(data)
		obj["lineupDesc"], data = parseUTF(data)
		obj["prices"], data = parse_obj(data)
		obj["numFree"], data = unpackex("i", data)
		obj["numOnceMore"], data = unpackex("i", data)
		obj["screeningItems"], data = parse_obj(data)
		obj["ratesAtKind"], data = parse_obj(data)
		obj["hasRareStamp"], data = unpackex("b", data)
		obj["gachaLineupPrioritizedKinds"], data = parse_obj(data)
		return ("GachaDef", obj), data

	elif obj_id == ID.GachaPriceDef:
		obj = {}
		obj["num"], data = unpackex("i", data)
		obj["prices"], data = parse_obj(data)
		obj["numDaily"], data = unpackex("i", data)
		obj["enabledCollect"], data = unpackex("b", data)
		return ("GachaPriceDef", obj), data

	elif obj_id == ID.GachaResult:
		obj = {}
		obj["userGachaData"], data = parse_obj(data)
		obj["items"], data = parse_obj(data)
		obj["params"], data = parse_obj(data)
		obj["convertedItems"], data = parse_obj(data)
		obj["rarities"], data = parse_obj(data)
		obj["worthFlags"], data = parse_obj(data)
		obj["onceMore"], data = unpackex("b", data)
		obj["useItem"], data = parse_obj(data)
		return ("GachaResult", obj), data

	elif obj_id == ID.GameDef:
		obj = {}
		obj["version"], data = unpackex("i", data)
		obj["dict"], data = parse_obj(data)
		obj["initDict"], data = parse_obj(data)
		obj["rule"], data = parse_obj(data)
		obj["screening"], data = parse_obj(data)
		obj["kitchenwareMap"], data = parse_primitive_obj(ID(7), data)
		obj["recipeNoteMap"], data = parse_primitive_obj(ID(7), data)
		obj["gudetamaMap"], data = parse_primitive_obj(ID(7), data)
		obj["voiceMap"], data = parse_primitive_obj(ID(7), data)
		obj["gachaMap"], data = parse_primitive_obj(ID(7), data)
		obj["usefulMap"], data = parse_primitive_obj(ID(7), data)
		obj["decorationMap"], data = parse_primitive_obj(ID(7), data)
		obj["utensilMap"], data = parse_primitive_obj(ID(7), data)
		obj["stampMap"], data = parse_primitive_obj(ID(7), data)
		obj["avatarMap"], data = parse_primitive_obj(ID(7), data)
		obj["missionMap"], data = parse_primitive_obj(ID(7), data)
		obj["touch"], data = parse_obj(data)
		obj["delusion"], data = parse_obj(data)
		obj["feature"], data = parse_obj(data)
		obj["friendly"], data = parse_obj(data)
		obj["videoAdReward"], data = parse_obj(data)
		obj["linkageMap"], data = parse_primitive_obj(ID(7), data)
		obj["questionMap"], data = parse_primitive_obj(ID(7), data)
		obj["arExpansionGoodsMap"], data = parse_primitive_obj(ID(7), data)
		obj["hideGudeMap"], data = parse_primitive_obj(ID(7), data)
		obj["commentMap"], data = parse_primitive_obj(ID(7), data)
		obj["promotionVideoMap"], data = parse_primitive_obj(ID(7), data)
		obj["identifiedPresentMap"], data = parse_primitive_obj(ID(7), data)
		obj["shareBonusMap"], data = parse_primitive_obj(ID(7), data)
		obj["quizGenreIdMax"], data = unpackex("i", data)
		obj["battleItemIdMax"], data = unpackex("i", data)
		obj["metalShopTable"], data = parse_primitive_obj(ID(7), data)
		obj["monthlyPremiumBonusTable"], data = parse_primitive_obj(ID(7), data)
		obj["guideTalkTable"], data = parse_primitive_obj(ID(7), data)
		obj["rankingMap"], data = parse_primitive_obj(ID(7), data)
		obj["rankingRewardMap"], data = parse_primitive_obj(ID(7), data)
		obj["fileInfos"], data = parse_obj(data)
		obj["locale"], data = parseUTF(data)
		obj["resourceUrl"], data = parseUTF(data)
		obj["purchasePresentTable"], data = parse_primitive_obj(ID(7), data)
		obj["bannerTable"], data = parse_primitive_obj(ID(7), data)
		obj["interTable"], data = parse_primitive_obj(ID(7), data)
		obj["deliverPointTableMap"], data = parse_primitive_obj(ID(7), data)
		obj["setItemMap"], data = parse_primitive_obj(ID(7), data)
		obj["comicMap"], data = parse_primitive_obj(ID(7), data)
		obj["onlyShowMap"], data = parse_primitive_obj(ID(7), data)
		obj["cupGachaMap"], data = parse_primitive_obj(ID(7), data)
		obj["homeExpansionGoodsMap"], data = parse_primitive_obj(ID(7), data)
		obj["homeStampSettingMap"], data = parse_primitive_obj(ID(7), data)
		obj["kitchenwareConditionMap"], data = parse_primitive_obj(ID(7), data)
		obj["helperSettingMap"], data = parse_primitive_obj(ID(7), data)
		obj["helperComicDef"], data = parse_obj(data)
		return ("GameDef", obj), data

	elif obj_id == ID.GetItemResult:
		obj = {}
		obj["item"], data = parse_obj(data)
		obj["param"], data = parse_obj(data)
		obj["toMail"], data = unpackex("b", data)
		return ("GetItemResult", obj), data

	elif obj_id == ID.GudetamaConstants:
		obj = {}
		return ("GudetamaConstants", obj), data

	elif obj_id == ID.GudetamaData:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["count"], data = unpackex("h", data)
		obj["num"], data = unpackex("h", data)
		obj["unlockedVoiceIndex"], data = unpackex("b", data)
		obj["available"], data = unpackex("b", data)
		obj["unlocked"], data = unpackex("b", data)
		obj["alreadyChallenge"], data = unpackex("b", data)
		obj["cookedHappening"], data = unpackex("b", data)
		obj["cookedFailure"], data = unpackex("b", data)
		obj["targetValue"], data = unpackex("i", data)
		obj["currentValue"], data = unpackex("i", data)
		obj["currentTarget"], data = unpackex("i", data)
		return ("GudetamaData", obj), data

	elif obj_id == ID.GudetamaDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rsrc"], data = unpackex("i", data)
		obj["uncountable"], data = unpackex("b", data)
		obj["disabledSpine"], data = unpackex("b", data)
		obj["imageOffsX"], data = unpackex("i", data)
		obj["imageOffsY"], data = unpackex("i", data)
		obj["kitchenwareId"], data = unpackex("i", data)
		obj["recipeNoteId"], data = unpackex("i", data)
		obj["type"], data = unpackex("b", data)
		obj["number"], data = unpackex("i", data)
		obj["name"], data = parseUTF(data)
		obj["wrappedName"], data = parseUTF(data)
		obj["desc"], data = parseUTF(data)
		obj["cost"], data = unpackex("i", data)
		obj["reward"], data = unpackex("i", data)
		obj["rarity"], data = unpackex("b", data)
		obj["category"], data = unpackex("b", data)
		obj["country"], data = unpackex("b", data)
		obj["area"], data = unpackex("h", data)
		obj["voices"], data = parse_obj(data)
		obj["voiceType"], data = unpackex("b", data)
		obj["dropAnime"], data = unpackex("i", data)
		obj["dish"], data = unpackex("b", data)
		obj["materials"], data = unpackex("i", data)
		obj["conditionDesc"], data = parseUTF(data)
		obj["roulettes"], data = parse_obj(data)
		obj["rouletteTimePerRound"], data = unpackex("i", data)
		obj["cookingResultType"], data = unpackex("i", data)
		obj["isGacha"], data = unpackex("b", data)
		obj["requiredGudetamas"], data = parse_obj(data)
		obj["touchTextParams"], data = parse_obj(data)
		obj["rubTextParams"], data = parse_obj(data)
		obj["isCup"], data = unpackex("b", data)
		obj["targetType"], data = unpackex("i", data)
		obj["targetId"], data = unpackex("i", data)
		return ("GudetamaDef", obj), data

	elif obj_id == ID.GuideTalkDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["paragraph"], data = parse_obj(data)
		obj["cannotSkip"], data = unpackex("b", data)
		return ("GuideTalkDef", obj), data

	elif obj_id == ID.GuideTalkParagraphParam:
		obj = {}
		obj["sentences"], data = parse_obj(data)
		return ("GuideTalkParagraphParam", obj), data

	elif obj_id == ID.GuideTalkSentenceParam:
		obj = {}
		obj["word"], data = unpackex("b", data)
		obj["event"], data = unpackex("b", data)
		obj["paramInt"], data = unpackex("i", data)
		obj["paramStr"], data = parseUTF(data)
		obj["waitTime"], data = unpackex("f", data)
		obj["forceTime"], data = unpackex("f", data)
		obj["nextWordsConnect"], data = unpackex("b", data)
		obj["forceWordsFinish"], data = unpackex("b", data)
		return ("GuideTalkSentenceParam", obj), data

	elif obj_id == ID.HelperCharaDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rsrc"], data = unpackex("i", data)
		obj["showRate"], data = unpackex("i", data)
		obj["massages"], data = parse_primitive_obj(ID(8), data)
		obj["massagePosIndex"], data = parse_primitive_obj(ID(8), data)
		obj["voices"], data = parse_primitive_obj(ID(8), data)
		obj["fixHelperPosX"], data = unpackex("i", data)
		return ("HelperCharaDef", obj), data

	elif obj_id == ID.HideGudetamaDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["name"], data = parseUTF(data)
		return ("HideGudetamaDef", obj), data

	elif obj_id == ID.HomeDecoData:
		obj = {}
		obj["stampId"], data = unpackex("i", data)
		obj["index"], data = unpackex("h", data)
		obj["x"], data = unpackex("d", data)
		obj["y"], data = unpackex("d", data)
		obj["rotation"], data = unpackex("f", data)
		obj["scale"], data = unpackex("f", data)
		obj["screenPosRateX"], data = unpackex("f", data)
		obj["screenPosRateY"], data = unpackex("f", data)
		obj["isSpain"], data = unpackex("b", data)
		return ("HomeDecoData", obj), data

	elif obj_id == ID.HomeExpansionGoodsDef:
		obj = {}
		obj["id"], data = unpackex("h", data)
		obj["price"], data = parse_obj(data)
		return ("HomeExpansionGoodsDef", obj), data

	elif obj_id == ID.HomeStampSettingDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["animationName"], data = parseUTF(data)
		obj["slotName"], data = parseUTF(data)
		obj["attachmentName"], data = parseUTF(data)
		obj["loop"], data = unpackex("b", data)
		obj["touchSetting"], data = parse_obj(data)
		obj["music"], data = parseUTF(data)
		obj["sound"], data = parseUTF(data)
		return ("HomeStampSettingDef", obj), data

	elif obj_id == ID.IdentifiedPresentDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["limit"], data = unpackex("i", data)
		obj["url"], data = parseUTF(data)
		return ("IdentifiedPresentDef", obj), data

	elif obj_id == ID.InitDictDef:
		obj = {}
		obj["others"], data = parse_primitive_obj(ID(8), data)
		obj["uitext"], data = parse_primitive_obj(ID(8), data)
		return ("InitDictDef", obj), data

	elif obj_id == ID.ItemParam:
		obj = {}
		obj["kind"], data = unpackex("i", data)
		obj["id"], data = unpackex("i", data)
		obj["num"], data = unpackex("i", data)
		return ("ItemParam", obj), data

	elif obj_id == ID.KitchenwareData:
		obj = {}
		obj["type"], data = unpackex("i", data)
		obj["paramMap"], data = parse_primitive_obj(ID(7), data)
		obj["recipeNoteId"], data = unpackex("i", data)
		obj["gudetamaId"], data = unpackex("i", data)
		obj["restTimeSecs"], data = unpackex("i", data)
		obj["assistUsefulIds"], data = parse_obj(data)
		obj["assistEncodedUids"], data = parse_obj(data)
		obj["target"], data = unpackex("i", data)
		return ("KitchenwareData", obj), data

	elif obj_id == ID.KitchenwareDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rsrc"], data = unpackex("i", data)
		obj["type"], data = unpackex("i", data)
		obj["grade"], data = unpackex("i", data)
		obj["name"], data = parseUTF(data)
		obj["desc"], data = parseUTF(data)
		obj["recipeNoteIds"], data = parse_obj(data)
		obj["conditionDesc"], data = parseUTF(data)
		obj["existsImage"], data = unpackex("b", data)
		obj["bgPos"], data = parse_obj(data)
		obj["materialLayer"], data = unpackex("i", data)
		obj["eventIds"], data = parse_obj(data)
		return ("KitchenwareDef", obj), data

	elif obj_id == ID.KitchenwareInfo:
		obj = {}
		obj["unavailableRecipeNoteIds"], data = parse_obj(data)
		obj["unavailableGudetamaIds"], data = parse_obj(data)
		return ("KitchenwareInfo", obj), data

	elif obj_id == ID.KitchenwareParam:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["available"], data = unpackex("b", data)
		return ("KitchenwareParam", obj), data

	elif obj_id == ID.LinearTable:
		obj = {}
		obj["offset"], data = unpackex("f", data)
		obj["rate"], data = unpackex("f", data)
		obj["indexOffset"], data = unpackex("i", data)
		obj["indexes"], data = parse_obj(data)
		obj["values"], data = parse_obj(data)
		return ("LinearTable", obj), data

	elif obj_id == ID.LinkageData:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["code"], data = parseUTF(data)
		obj["notified"], data = unpackex("b", data)
		return ("LinkageData", obj), data

	elif obj_id == ID.LinkageDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rsrc"], data = unpackex("i", data)
		obj["title"], data = parseUTF(data)
		obj["name"], data = parseUTF(data)
		obj["linkTitle"], data = parseUTF(data)
		obj["linkMessage"], data = parseUTF(data)
		obj["linkUrl"], data = parse_obj(data)
		obj["conditionDesc"], data = parseUTF(data)
		return ("LinkageDef", obj), data

	elif obj_id == ID.MailPresentResult:
		obj = {}
		obj["items"], data = parse_obj(data)
		obj["params"], data = parse_obj(data)
		return ("MailPresentResult", obj), data

	elif obj_id == ID.MetalShopDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["name"], data = parseUTF(data)
		obj["items"], data = parse_obj(data)
		return ("MetalShopDef", obj), data

	elif obj_id == ID.MetalShopItemDef:
		obj = {}
		obj["key"], data = unpackex("i", data)
		obj["rsrc"], data = unpackex("b", data)
		obj["value"], data = unpackex("i", data)
		obj["bonus"], data = unpackex("i", data)
		obj["campaign"], data = unpackex("i", data)
		obj["price"], data = unpackex("i", data)
		obj["product_id"], data = parseUTF(data)
		obj["items"], data = parse_obj(data)
		obj["limit"], data = unpackex("i", data)
		obj["overlap"], data = parse_obj(data)
		obj["ranklimit"], data = unpackex("i", data)
		obj["applimit"], data = unpackex("i", data)
		obj["info"], data = unpackex("i", data)
		return ("MetalShopItemDef", obj), data

	elif obj_id == ID.MissionConstants:
		obj = {}
		return ("MissionConstants", obj), data

	elif obj_id == ID.MissionData:
		obj = {}
		obj["key"], data = unpackex("i", data)
		obj["param"], data = parse_obj(data)
		obj["currentValue"], data = unpackex("h", data)
		obj["id"], data = unpackex("h", data)
		return ("MissionData", obj), data

	elif obj_id == ID.MissionDef:
		obj = {}
		obj["id"], data = unpackex("h", data)
		obj["number"], data = unpackex("i", data)
		obj["counterType"], data = unpackex("i", data)
		obj["eventId"], data = unpackex("i", data)
		obj["eventTypeFlags"], data = unpackex("i", data)
		obj["enableCountryFlags"], data = parse_obj(data)
		return ("MissionDef", obj), data

	elif obj_id == ID.MissionParam:
		obj = {}
		obj["number"], data = unpackex("i", data)
		obj["type"], data = unpackex("b", data)
		obj["category"], data = unpackex("b", data)
		obj["guide"], data = unpackex("h", data)
		obj["goalValue"], data = unpackex("h", data)
		obj["finishSecs"], data = unpackex("i", data)
		obj["targetDescKey"], data = parseUTF(data)
		obj["titleKey"], data = parseUTF(data)
		obj["nextTitleKey"], data = parseUTF(data)
		obj["rewards"], data = parse_obj(data)
		obj["titleParam"], data = parse_obj(data)
		obj["counterType"], data = unpackex("i", data)
		return ("MissionParam", obj), data

	elif obj_id == ID.MonthlyPremiumBonusDef:
		obj = {}
		obj["id"], data = unpackex("h", data)
		obj["validDays"], data = unpackex("h", data)
		obj["item"], data = parse_obj(data)
		obj["bonusItems"], data = parse_obj(data)
		return ("MonthlyPremiumBonusDef", obj), data

	elif obj_id == ID.NoticeFlagData:
		obj = {}
		obj["noticeFlags"], data = parse_obj(data)
		obj["tutorialProgress"], data = unpackex("i", data)
		obj["bitFlags"], data = unpackex("i", data)
		return ("NoticeFlagData", obj), data

	elif obj_id == ID.OnlyShowItemDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rsrc"], data = unpackex("i", data)
		obj["name"], data = parseUTF(data)
		obj["desc"], data = parseUTF(data)
		return ("OnlyShowItemDef", obj), data

	elif obj_id == ID.Packet:
		obj = {}
		obj["type"], data = unpackex("i", data)
		obj["time"], data = unpackex("i", data)
		obj["payloadInt"], data = parse_obj(data)
		obj["payloadObj0"], data = parse_obj(data)
		obj["payloadObj1"], data = parse_obj(data)
		obj["payloadExtra"], data = parse_obj(data)
		obj["sequence"], data = unpackex("h", data)
		obj["relogin"], data = unpackex("b", data)
		return ("Packet", obj), data

	elif obj_id == ID.PossibleRouletteParam:
		obj = {}
		obj["type"], data = unpackex("b", data)
		obj["percent"], data = unpackex("i", data)
		return ("PossibleRouletteParam", obj), data

	elif obj_id == ID.PresentLogData:
		obj = {}
		obj["encodedUid"], data = unpackex("i", data)
		obj["playerRank"], data = unpackex("i", data)
		obj["playerName"], data = parseUTF(data)
		obj["avatar"], data = unpackex("i", data)
		obj["itemId"], data = unpackex("i", data)
		obj["itemNum"], data = unpackex("i", data)
		obj["time"], data = unpackex("i", data)
		obj["snsProfileImage"], data = parse_obj(data)
		obj["snsType"], data = unpackex("b", data)
		return ("PresentLogData", obj), data

	elif obj_id == ID.PromotionBannerSettingDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["allowCountriyCodes"], data = parse_obj(data)
		obj["allowCountryLocales"], data = parse_obj(data)
		obj["bannerID"], data = parseUTF(data)
		obj["visible"], data = unpackex("b", data)
		obj["startTimeSecs"], data = unpackex("i", data)
		obj["limitTimeSecs"], data = unpackex("i", data)
		obj["endTimeStr"], data = parseUTF(data)
		obj["browserType"], data = unpackex("b", data)
		obj["webURL"], data = parse_obj(data)
		return ("PromotionBannerSettingDef", obj), data

	elif obj_id == ID.PromotionInterstitialSettingDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["allowCountriyCodes"], data = parse_obj(data)
		obj["allowCountryLocales"], data = parse_obj(data)
		obj["imageIDs"], data = parse_obj(data)
		obj["visible"], data = unpackex("b", data)
		obj["startTimeSecs"], data = unpackex("i", data)
		obj["limitTimeSecs"], data = unpackex("i", data)
		obj["endTimeStr"], data = parseUTF(data)
		obj["browserType"], data = unpackex("b", data)
		obj["webURL"], data = parse_obj(data)
		obj["rate"], data = unpackex("i", data)
		obj["intervalSec"], data = unpackex("i", data)
		return ("PromotionInterstitialSettingDef", obj), data

	elif obj_id == ID.PromotionVideoDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["movie"], data = unpackex("i", data)
		obj["endcard"], data = unpackex("i", data)
		obj["landscape"], data = unpackex("b", data)
		obj["urlApple"], data = parseUTF(data)
		obj["urlGoogle"], data = parseUTF(data)
		obj["link"], data = parseUTF(data)
		obj["locales"], data = parse_obj(data)
		return ("PromotionVideoDef", obj), data

	elif obj_id == ID.PurchasePresentDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["presents"], data = parse_obj(data)
		obj["message"], data = parseUTF(data)
		return ("PurchasePresentDef", obj), data

	elif obj_id == ID.PurchasePresentItemDef:
		obj = {}
		obj["price"], data = unpackex("i", data)
		obj["message"], data = parseUTF(data)
		obj["items"], data = parse_obj(data)
		return ("PurchasePresentItemDef", obj), data

	elif obj_id == ID.QnqConstants:
		obj = {}
		return ("QnqConstants", obj), data

	elif obj_id == ID.QnqServletConstants:
		obj = {}
		return ("QnqServletConstants", obj), data

	elif obj_id == ID.QuestionDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["question"], data = parseUTF(data)
		obj["questionVoiceId"], data = unpackex("i", data)
		obj["params"], data = parse_obj(data)
		return ("QuestionDef", obj), data

	elif obj_id == ID.QuestionInfo:
		obj = {}
		obj["encodedUid"], data = unpackex("i", data)
		obj["avatar"], data = unpackex("i", data)
		obj["friendName"], data = parseUTF(data)
		obj["questionId"], data = unpackex("i", data)
		obj["choiceIndex"], data = unpackex("i", data)
		obj["snsProfileImage"], data = parse_obj(data)
		obj["snsType"], data = unpackex("b", data)
		return ("QuestionInfo", obj), data

	elif obj_id == ID.QuestionParam:
		obj = {}
		obj["choice"], data = parseUTF(data)
		obj["message"], data = parseUTF(data)
		obj["messageVoiceId"], data = unpackex("i", data)
		return ("QuestionParam", obj), data

	elif obj_id == ID.RankingContentDef:
		obj = {}
		obj["type"], data = unpackex("i", data)
		obj["argi"], data = unpackex("i", data)
		obj["rewardId"], data = unpackex("i", data)
		obj["daily"], data = unpackex("b", data)
		obj["guild"], data = unpackex("b", data)
		obj["deliverTableId"], data = unpackex("i", data)
		obj["deliverPtsPercentMap"], data = parse_primitive_obj(ID(7), data)
		return ("RankingContentDef", obj), data

	elif obj_id == ID.RankingDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["title"], data = parseUTF(data)
		obj["desc"], data = parseUTF(data)
		obj["storyComicId"], data = unpackex("i", data)
		obj["howtoComicId"], data = unpackex("i", data)
		obj["content"], data = parse_obj(data)
		obj["groupType"], data = unpackex("i", data)
		obj["groupIdIndexMap"], data = parse_primitive_obj(ID(7), data)
		obj["hasDefaultGroupContent"], data = unpackex("b", data)
		obj["rankTextColor"], data = unpackex("i", data)
		obj["pointTextColor"], data = unpackex("i", data)
		obj["balloonTextColor"], data = unpackex("i", data)
		obj["rewardTextColor"], data = unpackex("i", data)
		obj["rankingTitleTextColor"], data = unpackex("i", data)
		obj["topRecordMatColor"], data = unpackex("i", data)
		obj["rankingRewardMatColor"], data = unpackex("i", data)
		obj["pointRewardMatColor"], data = unpackex("i", data)
		obj["levelRewardMatColor"], data = unpackex("i", data)
		obj["topRecordBgMatColor"], data = unpackex("i", data)
		obj["rankingRewardBgMatColor"], data = unpackex("i", data)
		obj["pointRewardBgMatColor"], data = unpackex("i", data)
		obj["levelRewardBgMatColor"], data = unpackex("i", data)
		obj["recordMatColor"], data = unpackex("i", data)
		obj["rankingRewardLineColor"], data = unpackex("i", data)
		obj["pointRewardLineColor"], data = unpackex("i", data)
		obj["levelRewardLineColor"], data = unpackex("i", data)
		return ("RankingDef", obj), data

	elif obj_id == ID.RankingInfo:
		obj = {}
		obj["contentIndex"], data = unpackex("i", data)
		obj["type"], data = unpackex("i", data)
		obj["contentTitle"], data = parseUTF(data)
		obj["argi"], data = unpackex("i", data)
		obj["showOnly"], data = unpackex("b", data)
		obj["guild"], data = unpackex("b", data)
		obj["desc"], data = parseUTF(data)
		obj["myPoint"], data = unpackex("i", data)
		obj["myRoughPlace"], data = unpackex("i", data)
		obj["topRecords"], data = parse_obj(data)
		obj["rewardId"], data = unpackex("i", data)
		obj["rewardPlaceAndPoint"], data = parse_obj(data)
		obj["topRecordSizeMax"], data = unpackex("i", data)
		obj["totalPoint"], data = unpackex("i", data)
		return ("RankingInfo", obj), data

	elif obj_id == ID.RankingRecord:
		obj = {}
		obj["point"], data = unpackex("i", data)
		obj["encodeUid"], data = unpackex("i", data)
		obj["playerName"], data = parseUTF(data)
		obj["avatar"], data = unpackex("i", data)
		obj["snsType"], data = unpackex("i", data)
		obj["snsProfileImage"], data = parse_obj(data)
		return ("RankingRecord", obj), data

	elif obj_id == ID.RankingRewardDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rewardIdTable"], data = parse_obj(data)
		obj["rankingRewards"], data = parse_obj(data)
		obj["pointRewards"], data = parse_obj(data)
		obj["globalRewards"], data = parse_obj(data)
		return ("RankingRewardDef", obj), data

	elif obj_id == ID.RankingRewardItemDef:
		obj = {}
		obj["sortedIndex"], data = unpackex("i", data)
		obj["last"], data = unpackex("b", data)
		obj["argi"], data = unpackex("i", data)
		obj["screeningItems"], data = parse_obj(data)
		return ("RankingRewardItemDef", obj), data

	elif obj_id == ID.RecipeNoteData:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["visible"], data = unpackex("b", data)
		obj["available"], data = unpackex("b", data)
		obj["purchased"], data = unpackex("b", data)
		obj["targetValue"], data = unpackex("i", data)
		obj["currentValue"], data = unpackex("i", data)
		return ("RecipeNoteData", obj), data

	elif obj_id == ID.RecipeNoteDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rsrc"], data = unpackex("i", data)
		obj["kitchenwareId"], data = unpackex("i", data)
		obj["name"], data = parseUTF(data)
		obj["desc"], data = parseUTF(data)
		obj["minutes"], data = unpackex("i", data)
		obj["premises"], data = parse_obj(data)
		obj["conditionDesc"], data = parseUTF(data)
		obj["eventId"], data = unpackex("i", data)
		obj["price"], data = unpackex("i", data)
		obj["defaults"], data = parse_obj(data)
		obj["appends"], data = parse_obj(data)
		obj["happeningIds"], data = parse_obj(data)
		obj["failureIds"], data = parse_obj(data)
		obj["hasBonusPrize"], data = unpackex("b", data)
		obj["targetType"], data = unpackex("i", data)
		obj["targetId"], data = unpackex("i", data)
		return ("RecipeNoteDef", obj), data

	elif obj_id == ID.RuleDef:
		obj = {}
		obj["focusGainedLimitTimeMinites"], data = unpackex("b", data)
		obj["reloadFollowerTime"], data = unpackex("i", data)
		obj["ruleFlags"], data = parse_obj(data)
		obj["roundingFollowPastDay"], data = unpackex("b", data)
		obj["locale"], data = parseUTF(data)
		obj["localeCode"], data = parse_obj(data)
		obj["titleMusic"], data = unpackex("i", data)
		obj["heavenTimeSecs"], data = unpackex("i", data)
		obj["touchRewards"], data = parse_obj(data)
		obj["carnaviIds"], data = parse_obj(data)
		obj["enabledMoneyShop"], data = unpackex("b", data)
		obj["menuItems"], data = parse_obj(data)
		obj["shopItems"], data = parse_obj(data)
		obj["collectionTypes"], data = parse_obj(data)
		obj["hurryUpReduceMinutesPerMetal"], data = unpackex("i", data)
		obj["hurryUpMetalBase"], data = unpackex("i", data)
		obj["cookingTooMatchTimeHours"], data = unpackex("i", data)
		obj["lowerLimitPercentForRouletteSpeed"], data = unpackex("i", data)
		obj["hurryUpItemBaseMap"], data = parse_primitive_obj(ID(7), data)
		obj["hurryUpReduceMinutesPerItem"], data = parse_primitive_obj(ID(7), data)
		obj["gachaRateScreeningLevel"], data = unpackex("i", data)
		obj["missionCommentAchievePercent"], data = parse_obj(data)
		obj["maxFriendsExtension"], data = unpackex("h", data)
		obj["friendsExtensionValue"], data = unpackex("h", data)
		obj["friendsExtensionPrices"], data = parse_obj(data)
		obj["updateFollowerTime"], data = unpackex("i", data)
		obj["maximumFriendPresentForGPWhileEvent"], data = unpackex("i", data)
		obj["friendlyValueByAssist"], data = unpackex("i", data)
		obj["gudetamaTeamIds"], data = parse_obj(data)
		obj["minimumMessageTime"], data = unpackex("i", data)
		obj["messagePercents"], data = parse_obj(data)
		obj["messageResetHourOffset"], data = unpackex("i", data)
		obj["friendPresentCost"], data = unpackex("i", data)
		obj["friendPresentGp"], data = unpackex("i", data)
		obj["friendPresentGpCountPerDay"], data = unpackex("i", data)
		obj["friendPresentGpGlobalCountPerDay"], data = unpackex("i", data)
		obj["freeFriendPresentCountPerDay"], data = unpackex("i", data)
		obj["placeArGudetamaNumTable"], data = parse_obj(data)
		obj["placeArStampNumTable"], data = parse_obj(data)
		obj["placeHomeStampNumTable"], data = parse_obj(data)
		obj["numScreeningPresentLogs"], data = unpackex("i", data)
		obj["maxFriendPresentMoneyPerRank"], data = unpackex("i", data)
		obj["maxAssistPerDay"], data = unpackex("i", data)
		obj["defStampSpainPath"], data = parseUTF(data)
		obj["imobileAndroidPlacement"], data = parse_obj(data)
		obj["imobileIOSPlacement"], data = parse_obj(data)
		obj["fiveAdsAndroidId"], data = parseUTF(data)
		obj["fiveAdsIOSId"], data = parseUTF(data)
		obj["fiveAdsAndroidSlotId"], data = parse_obj(data)
		obj["fiveAdsIOSSlotId"], data = parse_obj(data)
		obj["nendAdsAndroidIds"], data = parse_obj(data)
		obj["nendAdsIOSIds"], data = parse_obj(data)
		obj["eventBannerUpdateTime"], data = unpackex("i", data)
		obj["bannerCircleSec"], data = unpackex("i", data)
		obj["bannerCircle"], data = unpackex("b", data)
		obj["disableBannerOSVersionMap"], data = parse_primitive_obj(ID(8), data)
		obj["maioAdsAndroidId"], data = parseUTF(data)
		obj["maioAdsIOSId"], data = parseUTF(data)
		obj["maioAdsZoneAndroidId"], data = parseUTF(data)
		obj["maioAdsZoneIOSId"], data = parseUTF(data)
		obj["videoTraceErrorSec"], data = unpackex("i", data)
		obj["tapjoyAdsAndroidId"], data = parse_obj(data)
		obj["tapjoyAdsIOSId"], data = parse_obj(data)
		obj["vangleAdsAndroidId"], data = parseUTF(data)
		obj["vangleAdsIOSId"], data = parseUTF(data)
		obj["vangleAdsAndroidPlacementIds"], data = parse_obj(data)
		obj["vangleAdsIOSPlacementIds"], data = parse_obj(data)
		obj["ironsourceAdsAndroidId"], data = parseUTF(data)
		obj["ironsourceAdsIOSId"], data = parseUTF(data)
		obj["ironSourceGlobalAdsAndroidId"], data = parseUTF(data)
		obj["ironSourceGlobalAdsIOSId"], data = parseUTF(data)
		obj["admobBannerAndroidId"], data = parseUTF(data)
		obj["admobBannerIOSId"], data = parseUTF(data)
		obj["admobVideoAndroidId"], data = parseUTF(data)
		obj["admobVideoIOSId"], data = parseUTF(data)
		obj["nendAndroidIds"], data = parse_obj(data)
		obj["nendIOSIds"], data = parse_obj(data)
		obj["chartboosVideoAndroidIds"], data = parse_obj(data)
		obj["chartboosVideoIOSIds"], data = parse_obj(data)
		obj["promotionVideoNames"], data = parse_obj(data)
		obj["promotionVideoIdAndRatio"], data = parse_obj(data)
		obj["priorityMaxVideoCount"], data = unpackex("i", data)
		obj["preLoadingVideoSecs"], data = unpackex("i", data)
		obj["videoLodingIntervalMillisec"], data = unpackex("i", data)
		obj["videoGlobalLodingIntervalMillisec"], data = unpackex("i", data)
		obj["videoInitGiveupMilliSec"], data = unpackex("i", data)
		obj["imobileInterstitialAndroidPlacement"], data = parse_obj(data)
		obj["imobileInterstitialIOSPlacement"], data = parse_obj(data)
		obj["nendInterstitialAndroid"], data = parse_obj(data)
		obj["nendInterstitialIOS"], data = parse_obj(data)
		obj["interstitiaIntervalSecs"], data = unpackex("i", data)
		obj["interstitiaIntervalGlobalSecs"], data = unpackex("i", data)
		obj["ironVideoPlacementAndroidId"], data = parse_obj(data)
		obj["ironVideoPlacementIOSId"], data = parse_obj(data)
		obj["ironOfferPlacementAndroidId"], data = parse_obj(data)
		obj["ironOfferPlacementIOSId"], data = parse_obj(data)
		obj["ironInterPlacementAndroidId"], data = parse_obj(data)
		obj["ironInterPlacementIOSId"], data = parse_obj(data)
		obj["twitter_Key"], data = parseUTF(data)
		obj["twitter_Secret"], data = parseUTF(data)
		obj["facebook_Key"], data = parseUTF(data)
		obj["useSnsTwitter"], data = unpackex("b", data)
		obj["useSnsFacebook"], data = unpackex("b", data)
		obj["tiwtterSchemeAndroidURL"], data = parseUTF(data)
		obj["tiwtterSchemeIOSURL"], data = parseUTF(data)
		obj["snsLinkBonusNum"], data = unpackex("b", data)
		obj["usefulShopShortcut"], data = unpackex("b", data)
		obj["presentDeliverPtsPercent"], data = unpackex("i", data)
		obj["snsShareBonusType"], data = unpackex("i", data)
		obj["cupGachaOpenMinPerTier"], data = unpackex("i", data)
		obj["cupGachaOpenMetalPerTier"], data = unpackex("i", data)
		obj["cupGachaShortMinByAd"], data = unpackex("b", data)
		obj["cupGachaShortNumByAd"], data = unpackex("b", data)
		obj["cupGachaMailKeepDay"], data = unpackex("h", data)
		obj["useHomeDecoEachType"], data = unpackex("b", data)
		obj["cookingShortCut"], data = unpackex("b", data)
		obj["memoryCookingRecipe"], data = unpackex("b", data)
		obj["frameIds"], data = parse_obj(data)
		obj["titleName"], data = parseUTF(data)
		obj["titleSpineName"], data = parseUTF(data)
		obj["titleGudetamaSpineName"], data = parseUTF(data)
		obj["duplicateSceneCheckClasses"], data = parse_obj(data)
		obj["titleNameCountry"], data = parse_primitive_obj(ID(8), data)
		obj["titleSpineNameCountry"], data = parse_primitive_obj(ID(8), data)
		obj["titleGudetamaSpineNameCountry"], data = parse_primitive_obj(ID(8), data)
		return ("RuleDef", obj), data

	elif obj_id == ID.ScreeningDef:
		obj = {}
		obj["flags"], data = parse_obj(data)
		return ("ScreeningDef", obj), data

	elif obj_id == ID.ScreeningGachaItemParam:
		obj = {}
		obj["item"], data = parse_obj(data)
		obj["newFlag"], data = unpackex("b", data)
		obj["pickupFlag"], data = unpackex("b", data)
		obj["rate"], data = unpackex("i", data)
		return ("ScreeningGachaItemParam", obj), data

	elif obj_id == ID.SequenceTable:
		obj = {}
		obj["offset"], data = unpackex("f", data)
		obj["rate"], data = unpackex("f", data)
		obj["indexOffset"], data = unpackex("i", data)
		obj["values"], data = parse_obj(data)
		return ("SequenceTable", obj), data

	elif obj_id == ID.SetItemAlternativeParam:
		obj = {}
		obj["rsrc"], data = unpackex("i", data)
		obj["items"], data = parse_obj(data)
		return ("SetItemAlternativeParam", obj), data

	elif obj_id == ID.SetItemBuyData:
		obj = {}
		obj["count"], data = unpackex("h", data)
		return ("SetItemBuyData", obj), data

	elif obj_id == ID.SetItemDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["viewType"], data = unpackex("b", data)
		obj["items"], data = parse_obj(data)
		obj["startTimeSec"], data = unpackex("i", data)
		obj["endTimeSec"], data = unpackex("i", data)
		obj["chargeItem"], data = parse_obj(data)
		obj["buyableCount"], data = unpackex("h", data)
		obj["rsrc"], data = unpackex("i", data)
		obj["alternativeParam"], data = parse_obj(data)
		return ("SetItemDef", obj), data

	elif obj_id == ID.ShareBonusDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["item"], data = parse_obj(data)
		obj["message"], data = parseUTF(data)
		obj["alternativeMessage"], data = parseUTF(data)
		return ("ShareBonusDef", obj), data

	elif obj_id == ID.StampData:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["num"], data = unpackex("i", data)
		obj["available"], data = unpackex("b", data)
		return ("StampData", obj), data

	elif obj_id == ID.StampDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rsrc"], data = unpackex("i", data)
		obj["privately"], data = unpackex("b", data)
		obj["name"], data = parseUTF(data)
		obj["desc"], data = parseUTF(data)
		obj["conditionDesc"], data = parseUTF(data)
		obj["price"], data = parse_obj(data)
		obj["isNew"], data = unpackex("b", data)
		obj["rare"], data = unpackex("i", data)
		obj["isSpine"], data = unpackex("b", data)
		obj["homeStampSettingId"], data = unpackex("i", data)
		return ("StampDef", obj), data

	elif obj_id == ID.StampInfo:
		obj = {}
		obj["updateStamps"], data = parse_obj(data)
		obj["removeStampIds"], data = parse_obj(data)
		return ("StampInfo", obj), data

	elif obj_id == ID.SubHomeStampSettingDef:
		obj = {}
		obj["animationName"], data = parseUTF(data)
		obj["loop"], data = unpackex("b", data)
		obj["music"], data = parseUTF(data)
		obj["sound"], data = parseUTF(data)
		obj["voiceId"], data = unpackex("i", data)
		return ("SubHomeStampSettingDef", obj), data

	elif obj_id == ID.SystemMailData:
		obj = {}
		obj["type"], data = unpackex("b", data)
		obj["kind"], data = unpackex("b", data)
		obj["senderEncodedUid"], data = unpackex("i", data)
		obj["item"], data = parse_obj(data)
		obj["title"], data = parseUTF(data)
		obj["url"], data = parseUTF(data)
		obj["urlAndroid"], data = parseUTF(data)
		obj["alreadyRead"], data = unpackex("b", data)
		obj["noticeIconId"], data = unpackex("i", data)
		obj["deleteSec"], data = unpackex("i", data)
		obj["manualDeletion"], data = unpackex("b", data)
		obj["uniqueKey"], data = unpackex("i", data)
		obj["message"], data = parseUTF(data)
		obj["receivedSecs"], data = unpackex("i", data)
		return ("SystemMailData", obj), data

	elif obj_id == ID.TouchDef:
		obj = {}
		obj["voiceEvents"], data = parse_obj(data)
		obj["itemEvents"], data = parse_obj(data)
		obj["randomVoiceIds"], data = parse_obj(data)
		return ("TouchDef", obj), data

	elif obj_id == ID.TouchEventDef:
		obj = {}
		obj["voice"], data = unpackex("i", data)
		return ("TouchEventDef", obj), data

	elif obj_id == ID.TouchEventParam:
		obj = {}
		obj["touchNum"], data = unpackex("i", data)
		obj["event"], data = unpackex("i", data)
		obj["voice"], data = unpackex("i", data)
		obj["paramByte"], data = unpackex("b", data)
		return ("TouchEventParam", obj), data

	elif obj_id == ID.TouchInfo:
		obj = {}
		obj["params"], data = parse_obj(data)
		obj["bonusRange"], data = parse_obj(data)
		return ("TouchInfo", obj), data

	elif obj_id == ID.UsefulData:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["num"], data = unpackex("i", data)
		obj["available"], data = unpackex("b", data)
		obj["nextAvailablePurchaseSec"], data = unpackex("i", data)
		return ("UsefulData", obj), data

	elif obj_id == ID.UsefulDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rsrc"], data = unpackex("i", data)
		obj["privately"], data = unpackex("b", data)
		obj["name"], data = parseUTF(data)
		obj["desc"], data = parseUTF(data)
		obj["usable"], data = unpackex("i", data)
		obj["event"], data = unpackex("b", data)
		obj["abilities"], data = parse_obj(data)
		obj["assistAbilities"], data = parse_obj(data)
		obj["friendlyValue"], data = unpackex("i", data)
		obj["conditionDesc"], data = parseUTF(data)
		obj["sortIndex"], data = unpackex("i", data)
		obj["price"], data = parse_obj(data)
		obj["isNew"], data = unpackex("b", data)
		obj["eventId"], data = unpackex("i", data)
		obj["kitchenwareTypes"], data = parse_obj(data)
		obj["possessionLimit"], data = unpackex("i", data)
		obj["purchaseResetHourOffset"], data = unpackex("b", data)
		return ("UsefulDef", obj), data

	elif obj_id == ID.UsefulInfo:
		obj = {}
		obj["updateUsefuls"], data = parse_obj(data)
		obj["removeUsefulIds"], data = parse_obj(data)
		return ("UsefulInfo", obj), data

	elif obj_id == ID.UserAbilityData:
		obj = {}
		obj["ability"], data = parse_obj(data)
		obj["restTimeSecs"], data = unpackex("i", data)
		return ("UserAbilityData", obj), data

	elif obj_id == ID.UserAssistData:
		obj = {}
		obj["num"], data = unpackex("i", data)
		return ("UserAssistData", obj), data

	elif obj_id == ID.UserData:
		obj = {}
		obj["uid"], data = unpackex("i", data)
		obj["encodedUid"], data = unpackex("i", data)
		obj["playerName"], data = parseUTF(data)
		obj["gender"], data = unpackex("i", data)
		obj["doneFirstLogin"], data = unpackex("b", data)
		obj["pushFlags"], data = unpackex("i", data)
		obj["nextDailyPresentTime"], data = unpackex("d", data)
		obj["timeZoneOffset"], data = unpackex("i", data)
		obj["noticeFlagData"], data = parse_obj(data)
		obj["locale"], data = parseUTF(data)
		obj["rank"], data = unpackex("i", data)
		obj["chargeMetal"], data = unpackex("i", data)
		obj["freeMetal"], data = unpackex("i", data)
		obj["subMetal"], data = unpackex("i", data)
		obj["chargeMoney"], data = unpackex("i", data)
		obj["freeMoney"], data = unpackex("i", data)
		obj["avatar"], data = unpackex("i", data)
		obj["avatarMap"], data = parse_primitive_obj(ID(7), data)
		obj["area"], data = unpackex("i", data)
		obj["comment"], data = unpackex("h", data)
		obj["placedGudetamaId"], data = unpackex("i", data)
		obj["kitchenwareMap"], data = parse_primitive_obj(ID(7), data)
		obj["recipeNoteMap"], data = parse_primitive_obj(ID(7), data)
		obj["gudetamaMap"], data = parse_primitive_obj(ID(7), data)
		obj["gachaMap"], data = parse_primitive_obj(ID(7), data)
		obj["friendPresentMoneyParamMap"], data = parse_primitive_obj(ID(7), data)
		obj["stampMap"], data = parse_primitive_obj(ID(7), data)
		obj["usefulMap"], data = parse_primitive_obj(ID(7), data)
		obj["utensilMap"], data = parse_primitive_obj(ID(7), data)
		obj["decorationMap"], data = parse_primitive_obj(ID(7), data)
		obj["decorationId"], data = unpackex("i", data)
		obj["wantedGudetamas"], data = parse_obj(data)
		obj["maxDelusion"], data = unpackex("i", data)
		obj["delusionStartTimeSecs"], data = unpackex("i", data)
		obj["touchInfo"], data = parse_obj(data)
		obj["dropItemEvent"], data = parse_obj(data)
		obj["heavenEvent"], data = parse_obj(data)
		obj["userAbilities"], data = parse_obj(data)
		obj["features"], data = parse_obj(data)
		obj["numAcquiredVideoAdReward"], data = unpackex("i", data)
		obj["videoAdRewardUpdateTimeSecs"], data = unpackex("i", data)
		obj["linkageMap"], data = parse_primitive_obj(ID(7), data)
		obj["numPurchaseMap"], data = parse_primitive_obj(ID(7), data)
		obj["numFriendsExtension"], data = unpackex("i", data)
		obj["snsInterlockType"], data = unpackex("b", data)
		obj["snsTwitterUid"], data = parseUTF(data)
		obj["snsFacebookUid"], data = parseUTF(data)
		obj["purchasePresentMap"], data = parse_primitive_obj(ID(7), data)
		obj["placeGudetamaExpansionCount"], data = unpackex("h", data)
		obj["placeStampExpansionCount"], data = unpackex("h", data)
		obj["commentList"], data = parse_primitive_obj(ID(9), data)
		obj["finishMonthlyPremiumBonusTimeSec"], data = unpackex("i", data)
		obj["noticeMonthlyPremiumBonusTimeSec"], data = unpackex("i", data)
		obj["sendTouchCount"], data = unpackex("i", data)
		obj["numAcquiredIdentifiedPresentMap"], data = parse_primitive_obj(ID(7), data)
		obj["setItemBuyMap"], data = parse_primitive_obj(ID(7), data)
		obj["numFriendPresentForGPWhileEventMap"], data = parse_primitive_obj(ID(7), data)
		obj["cupGachaData"], data = parse_obj(data)
		obj["cupGachaConditionClearIds"], data = parse_primitive_obj(ID(9), data)
		obj["homeDecoDataMap"], data = parse_primitive_obj(ID(7), data)
		obj["placeHomeStampExpansionCount"], data = unpackex("h", data)
		return ("UserData", obj), data

	elif obj_id == ID.UserGachaData:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["playCount"], data = unpackex("i", data)
		obj["prices"], data = parse_obj(data)
		obj["onceMorePlayCount"], data = unpackex("b", data)
		obj["freePlayCount"], data = unpackex("b", data)
		return ("UserGachaData", obj), data

	elif obj_id == ID.UserGachaPriceData:
		obj = {}
		obj["dailyPlayCount"], data = unpackex("i", data)
		return ("UserGachaPriceData", obj), data

	elif obj_id == ID.UserPresentMoneyData:
		obj = {}
		obj["pid"], data = unpackex("d", data)
		obj["encodedUid"], data = unpackex("i", data)
		obj["playerName"], data = parseUTF(data)
		obj["playerRank"], data = unpackex("i", data)
		obj["money"], data = unpackex("i", data)
		obj["presentTimeSecs"], data = unpackex("i", data)
		obj["avatar"], data = unpackex("i", data)
		obj["snsProfileImage"], data = parse_obj(data)
		obj["snsType"], data = unpackex("b", data)
		return ("UserPresentMoneyData", obj), data

	elif obj_id == ID.UserProfileData:
		obj = {}
		obj["encodedUid"], data = unpackex("i", data)
		obj["playerName"], data = parseUTF(data)
		obj["playerRank"], data = unpackex("i", data)
		obj["avatar"], data = unpackex("i", data)
		obj["gender"], data = unpackex("i", data)
		obj["area"], data = unpackex("i", data)
		obj["comment"], data = unpackex("i", data)
		obj["followState"], data = unpackex("b", data)
		obj["followRequestSecs"], data = unpackex("i", data)
		obj["snsProfileImage"], data = parse_obj(data)
		obj["lastActiveSec"], data = unpackex("i", data)
		obj["snsId"], data = parseUTF(data)
		obj["snsType"], data = unpackex("b", data)
		return ("UserProfileData", obj), data

	elif obj_id == ID.UserRankingData:
		obj = {}
		obj["rankingPoint"], data = unpackex("i", data)
		return ("UserRankingData", obj), data

	elif obj_id == ID.UserRoomInfo:
		obj = {}
		obj["placedGudetamaId"], data = unpackex("i", data)
		obj["questionId"], data = unpackex("i", data)
		obj["kitchenwareMap"], data = parse_primitive_obj(ID(7), data)
		obj["friendlyData"], data = parse_obj(data)
		obj["lastFriendlyLevel"], data = unpackex("i", data)
		obj["friendPresentMoneyParam"], data = parse_obj(data)
		obj["assistData"], data = parse_obj(data)
		obj["decorationId"], data = unpackex("i", data)
		obj["homeDecoDataList"], data = parse_primitive_obj(ID(9), data)
		return ("UserRoomInfo", obj), data

	elif obj_id == ID.UserWantedData:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["updateTime"], data = unpackex("i", data)
		return ("UserWantedData", obj), data

	elif obj_id == ID.UtensilData:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["acquired"], data = unpackex("b", data)
		obj["available"], data = unpackex("b", data)
		return ("UtensilData", obj), data

	elif obj_id == ID.UtensilDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rsrc"], data = unpackex("i", data)
		obj["name"], data = parseUTF(data)
		obj["desc"], data = parseUTF(data)
		obj["conditionDesc"], data = parseUTF(data)
		obj["price"], data = parse_obj(data)
		obj["isNew"], data = unpackex("b", data)
		return ("UtensilDef", obj), data

	elif obj_id == ID.UtensilInfo:
		obj = {}
		obj["updateUtensils"], data = parse_obj(data)
		obj["removeUtensilIds"], data = parse_obj(data)
		return ("UtensilInfo", obj), data

	elif obj_id == ID.VideoAdRewardDef:
		obj = {}
		obj["items"], data = parse_obj(data)
		return ("VideoAdRewardDef", obj), data

	elif obj_id == ID.VoiceDef:
		obj = {}
		obj["id"], data = unpackex("i", data)
		obj["rsrc"], data = unpackex("i", data)
		obj["gudetamaId"], data = unpackex("i", data)
		obj["type"], data = unpackex("b", data)
		obj["number"], data = unpackex("i", data)
		obj["name"], data = parseUTF(data)
		obj["position"], data = unpackex("i", data)
		obj["offset"], data = parse_obj(data)
		obj["params"], data = parse_obj(data)
		return ("VoiceDef", obj), data

	elif obj_id == ID.VoiceParam:
		obj = {}
		obj["resources"], data = parse_obj(data)
		obj["names"], data = parse_obj(data)
		obj["delays"], data = parse_obj(data)
		obj["positions"], data = parse_obj(data)
		obj["offsets"], data = parse_obj(data)
		return ("VoiceParam", obj), data

	elif obj_id == ID.AbilityParam:
		obj = {}
		obj["type"], data = unpackex("i", data)
		obj["values"], data = parse_obj(data)
		obj["secs"], data = unpackex("i", data)
		return ("AbilityParam", obj), data

	elif obj_id == ID.UserProfileData:
		obj = {}
		obj["encodedUid"], data = unpackex("i", data)
		obj["playerName"], data = parseUTF(data)
		obj["playerRank"], data = unpackex("i", data)
		obj["avatar"], data = unpackex("i", data)
		obj["gender"], data = unpackex("i", data)
		obj["area"], data = unpackex("i", data)
		obj["comment"], data = unpackex("i", data)
		obj["followState"], data = unpackex("b", data)
		obj["followRequestSecs"], data = unpackex("i", data)
		obj["snsProfileImage"], data = parse_obj(data)
		obj["lastActiveSec"], data = unpackex("i", data)
		obj["snsId"], data = parseUTF(data)
		obj["snsType"], data = unpackex("b", data)
		return ("UserProfileData", obj), data
